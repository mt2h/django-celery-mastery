version: '3.8'

services:

  flower:
    image: mher/flower
    container_name: flower
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672
      - FLOWER_PERSISTENT=True
    volumes:
      - flower_data:/data

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  redis:
    image: redis:7.0.11-alpine
    container_name: redis

  django:
    container_name: django
    build:
      context: ./dcelery
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./dcelery:/usr/src/app/
    ports:
      - 8001:8000
    environment:
      - DEBUG=1
      - SECRET_KEY=0930jd30j9jd09j109fj01j9f
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      - redis

  celery:
    container_name: celery
    build:
      context: ./dcelery
    #command: celery --app=dcelery worker -l INFO  
    #command: celery --app=dcelery worker -l INFO -Q queue1
    #command: celery --app=dcelery worker -l INFO -Q celery,celery:1,celery:2,celery:3
    command: celery --app=dcelery worker -l INFO -Q tasks,dead_letter -E
    volumes:
      - ./dcelery:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=0930jd30j9jd09j109fj01j9f
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      - redis
      - django
      - rabbitmq

  #celery2:
  #  container_name: celery2
  #  build:
  #    context: ./celeryworker
  #    dockerfile: Dockerfile
  #  command: celery -A celerytask worker --loglevel=INFO -Q queue2
  #  volumes:
  #    - ./celeryworker:/usr/src/app/
  #  depends_on:
  #    - redis
  #    - django

volumes:
  flower_data: